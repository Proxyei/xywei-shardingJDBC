#
## 定义两个全局数据源
#spring.shardingsphere.datasource.names=ds-0,ds-1
#
## 配置数据源 ds-0
#spring.shardingsphere.datasource.ds-0.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds-0.driverClassName=org.postgresql.Driver
#spring.shardingsphere.datasource.ds-0.url=jdbc:postgresql://192.168.126.147:5432/dev2022
#spring.shardingsphere.datasource.ds-0.username=xywei
#spring.shardingsphere.datasource.ds-0.password=dev@2022
#
## 配置数据源 ds-1
#spring.shardingsphere.datasource.ds-1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds-1.driverClassName=org.postgresql.Driver
#spring.shardingsphere.datasource.ds-1.url=jdbc:postgresql://192.168.126.148:5432/dev2022
#spring.shardingsphere.datasource.ds-1.username=xywei
#spring.shardingsphere.datasource.ds-1.password=dev@2022
#
## 配置数据节点
#spring.shardingsphere.sharding.tables.employee.actual-data-nodes=ds-$->{0..1}.employee_$->{0..1}
#
#### 分库策略
## 分库分片健
#spring.shardingsphere.sharding.tables.employee.database-strategy.inline.sharding-column=id
## 分库分片算法
#spring.shardingsphere.sharding.tables.employee.database-strategy.inline.algorithm-expression=ds-$->{id % 2}
#
## 分表策略
## 分表分片健
#spring.shardingsphere.sharding.tables.employee.table-strategy.inline.sharding-column=id
## 分表算法
#spring.shardingsphere.sharding.tables.employee.table-strategy.inline.algorithm-expression=employee_$->{id % 2}
#
## 自增主键字段
#spring.shardingsphere.sharding.tables.employee.key-generator.column=id
## 自增主键ID 生成方案
#spring.shardingsphere.sharding.tables.employee.key-generator.type=SNOWFLAKE
#
#
#
#
